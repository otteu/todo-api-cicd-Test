buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}


plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

group = 'com.todo'
version = '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
// lombok
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // spring web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // connector
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'


    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // swagger
    // implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.8.0'
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0")

    // security
    // implementation 'org.springframework.boot:spring-boot-starter-security'


    implementation 'com.google.code.gson:gson:2.10.1'


    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // 모듈 추가
    // implementation project(':db')

    // test
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    // queryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    )
}

test {
    useJUnitPlatform()
}

bootJar {
    enabled = true
}

jar {
    enabled = false
}
